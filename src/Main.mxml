<?xml version="1.0"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       showStatusBar="false"
                       width="400"
                       height="200"
                       preinitialize="onPreinitialize(event)"
                       creationComplete="onComplete(event)"
                       frameRate="60">
    <fx:Script><![CDATA[
        import greensock.TweenLite;

        import mx.core.UIComponent;

        import mx.events.FlexEvent;
        import mx.managers.FocusManager;

        private var loader:Loader;

        protected function onPreinitialize(event:FlexEvent):void
        {
            // Center window on screen
            visible = true;
            center();
        }

        protected function center():void
        {
            nativeWindow.x = (Capabilities.screenResolutionX - width) / 2;
            nativeWindow.y = (Capabilities.screenResolutionY - height) / 2;
        }

        protected function onComplete(event:FlexEvent):void
        {
            inputUrl.text       = "https://github.com/olinkirkland/Generations/raw/release/out/production/Generations/Main.swf";
            buttonClear.enabled = buttonLoad.enabled = File.applicationStorageDirectory.resolvePath("download.swf").exists;
        }

        private function loadSwf():void
        {
            loader             = new Loader();
            var file:File      = File.applicationStorageDirectory.resolvePath("download.swf");
            var url:URLRequest = new URLRequest(file.url);

            var ui:UIComponent = new UIComponent();
            addElement(ui);

            SoundMixer.soundTransform = new SoundTransform(0);
            loader.load(url);
            loader.visible = false;

            setTimeout(function ():void
            {
                var w:int = loader.contentLoaderInfo.width;
                var h:int = loader.contentLoaderInfo.height;
                animateWindowToSize(w, h, onReady);
                removeElement(splash);
            }, 1000);

            function onReady():void
            {
                loader.unloadAndStop(true);
                SoundMixer.soundTransform = new SoundTransform(1);
                loader.load(url);
                loader.visible = true;
                ui.addChild(loader);
            }
        }

        private function animateWindowToSize(w:int, h:int, onComplete:Function):void
        {
            TweenLite.to(nativeWindow,
                    0.3,
                    {
                        width:      w,
                        height:     h,
                        onUpdate:   center,
                        onComplete: onComplete
                    });
        }

        private function onClickButtonSubmit(event:MouseEvent):void
        {
            inputUrl.enabled     = false;
            buttonSubmit.enabled = false;

            var urlStream:URLStream = new URLStream();

            urlStream.addEventListener(ProgressEvent.PROGRESS, function (event:ProgressEvent)
            {
                labelInfo.text = (event.bytesLoaded / 1000).toFixed(1) + " KB / " + (event.bytesTotal / 1000).toFixed(1) + " KB";
            });

            urlStream.addEventListener(Event.COMPLETE, function (event:Event)
            {
                var fileData:ByteArray = new ByteArray();
                urlStream.readBytes(fileData, 0, urlStream.bytesAvailable);
                fileStream.openAsync(file, FileMode.WRITE);
                fileStream.writeBytes(fileData, 0, fileData.length);
                fileStream.close();

                inputUrl.enabled     = true;
                buttonSubmit.enabled = true;
                focusManager.setFocus(inputUrl);
                buttonClear.enabled = buttonLoad.enabled = File.applicationStorageDirectory.resolvePath("download.swf").exists;

                labelInfo.text = "Download complete!";
            });

            urlStream.addEventListener(IOErrorEvent.IO_ERROR, function (event:IOErrorEvent)
            {
                inputUrl.enabled     = true;
                buttonSubmit.enabled = true;
                focusManager.setFocus(inputUrl);

                labelInfo.text = "Error! Enter a valid address.";
            });

            var fileStream:FileStream = new FileStream();
            var file:File             = File.applicationStorageDirectory.resolvePath("download.swf");
            urlStream.load(new URLRequest(inputUrl.text));
        }

        private function onClickButtonLoad(event:MouseEvent):void
        {
            loadSwf();
        }

        private function onClickButtonClear(event:MouseEvent):void
        {
            File.applicationStorageDirectory.resolvePath("download.swf").deleteFile();
            buttonClear.enabled = buttonLoad.enabled = false;
            labelInfo.text      = "Cache cleared!";
        }
        ]]></fx:Script>
    <s:VGroup id="splash"
              width="100%"
              height="100%"
              horizontalAlign="center"
              verticalAlign="middle"
              padding="10">

        <s:TextInput id="inputUrl"
                     width="100%" />

        <s:HGroup width="100%">

            <s:Button id="buttonSubmit"
                      label="Download"
                      click="onClickButtonSubmit(event)" />

            <s:Button id="buttonLoad"
                      label="Load"
                      click="onClickButtonLoad(event)" />

            <s:Button id="buttonClear"
                      label="Clear cache"
                      click="onClickButtonClear(event)" />
        </s:HGroup>

        <s:Label id="labelInfo"
                 width="100%"
                 text="Enter a url to download" />

    </s:VGroup>
</s:WindowedApplication>
